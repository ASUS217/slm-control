function memory

    global MISC FIG UI MEMORY SLM

    panel = uipanel( ...
        'title', 'pattern memory' ...
      , 'units', 'pixels' ...
      , 'parent', FIG.main ...
      , 'fontSize', 8 ...
      , 'position', [ ( 3 * MISC.padding + 280 ) ( MISC.padding ) ( 310 + MISC.padding ) ( MISC.controls + MISC.padding ) ] ...
    );

    % description
    uicontrol( ...
        'style', 'text' ...
      , 'parent', panel ...
      , 'position', [ ( MISC.padding/2 ) ( MISC.padding/2 + MISC.controls/2 - 2 ) 60 20 ] ...
      , 'string', 'description:' ...
    );
    UI.memory.description =  uicontrol( ...
        'style', 'edit' ...
      , 'parent', panel ...
      , 'position', [ ( MISC.padding + 60 ) ( MISC.padding/2 + MISC.controls/2 + 1 ) 100 18 ] ...
      , 'string', '' ...
    );


    % store / recall
    UI.memory.action.group = uibuttongroup( ...
        'parent', panel ...
      , 'units', 'pixels' ...
      , 'position', [ ( MISC.padding/2 + 182 ) ( MISC.padding/2 + MISC.controls/2 + 2 ) 1 1 ] ...
    );
    
    UI.memory.action.store = uicontrol( ...
        'style', 'togglebutton' ...
      , 'parent',  UI.memory.action.group ...
      , 'units', 'pixels' ...
      , 'position', [ 0 0 60 20 ] ...
      , 'value', 1 ...
      , 'string', 'store' ...
    );

    UI.memory.action.recall = uicontrol( ...
        'style', 'togglebutton' ...
      , 'parent',  UI.memory.action.group ...
      , 'units', 'pixels' ...
      , 'position', [ 70 0 60 20 ] ...
      , 'value', 0 ...
      , 'string', 'recall' ...
    );

    % banks
    UI.memory.banks = 1:8;
    for b = UI.memory.banks
        UI.memory.banks( b ) = uicontrol( ...
            'style', 'pushbutton' ...
          , 'parent', panel ...
          , 'string', sprintf( '#%d', b ) ...
          , 'tooltipString', 'empty' ...
          , 'position', [ ( MISC.padding/2*b + 30 * (b-1) ) ( MISC.padding/2) 30 20 ] ...
          , 'tag', num2str( b ) ...
          , 'callback', @storeOrRecall ...
        );
    end
    
    MEMORY = cell( size( UI.memory.banks ) );
    function storeOrRecall( element, ~ )
        bank = str2double( get( element, 'tag' ) );
        
        if strcmp( get( get( UI.memory.action.group, 'selectedObject' ), 'string'), 'store' )
            MEMORY{ bank } = SLM.pattern;
            
            description = get( UI.memory.description, 'string' );
            if isempty( description )
                description = 'unnamed pattern';
            else
                set( UI.memory.description, 'string', '' );
            end
            
            set( element, 'tooltipString', description );
        elseif ~isempty( MEMORY{ bank } )
            SLM.update( MEMORY{ bank } );
        end
    end
end